"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["routes-inputs"],{"./src/components/common/Select.jsx":(e,t,r)=>{r.r(t),r.d(t,{default:()=>a});var n=r("./node_modules/react/index.js"),l=r.n(n),s=r("./src/hooks/useKeyPressed.js");function a(e){let{options:t,value:r,setSelectedValue:a,placeholder:o}=e;const u=(0,n.useRef)(null),[c,i]=(0,n.useState)(!1),[m,d]=(0,n.useState)(t),[p,h]=(0,n.useState)(0),[v,w]=(0,n.useState)(""),f=(0,s.useKeyPressed)("ArrowDown"),y=(0,s.useKeyPressed)("Enter");(0,n.useEffect)((()=>{c||f&&!c&&(i(!0),u.current.focus())}),[f,y]);const g=e=>{h(0),w(e.target.value),(e=>{let r=t.filter((t=>t.label.toLowerCase().includes(e.toLowerCase())));d(r.map((e=>e)))})(e.target.value)};return l().createElement(l().Fragment,null,l().createElement("div",{className:" relative flex my-1 bg-theme-primary text-theme-secondary w-full py-2 ring-[0.05rem] ring-theme-tertiary focus:ring-theme-quaternary cursor-pointer rounded-sm ",onBlur:()=>i(!1)},l().createElement("div",{className:"w-[2rem] flex items-center justify-center pointer-events-none "},l().createElement("svg",{height:20,width:20,xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",strokeWidth:2},l().createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"}))),l().createElement("input",{ref:u,type:"text",onKeyDown:e=>(e=>{switch(e.key){case"ArrowUp":h((e=>e>0?e-1:e));break;case"ArrowDown":h((e=>e<m.length-1?e+1:e));break;case"Enter":a(m[p]),i(!1),w(""),d(t),u.current.blur();break;case"Escape":i(!1),w(""),d(t),u.current.blur()}})(e),value:v,className:"absolute flex items-center left-[2rem] right-[2rem] inset-y-0 outline-none z-50 bg-transparent",onChange:e=>g(e)}),l().createElement("input",{type:"text",placeholder:v.length>0?"":r.label.length>0?r.label:o||"Select...",className:"absolute flex items-center left-[2rem] right-[2rem] inset-y-0 outline-none bg-transparent placeholder:text-white pointer-events-none"}),l().createElement("div",{className:"absolute bg-red-500 w-[2rem] right-0 inset-y-0 flex items-center justify-center pointer-events-none",onClick:()=>console.log("here")},l().createElement("svg",{xmlns:"http://www.w3.org/2000/svg",className:(c?"-rotate-90":"rotate-0")+" 'transition transform ease-in-out duration-200",height:20,width:20,fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",strokeWidth:2},l().createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M15 19l-7-7 7-7"}))),c&&l().createElement("div",{className:"absolute top-12 right-0 left-0 bg-theme-primary text-theme-secondary cursor-pointer border-[0.05rem] border-theme-quaternary rounded-sm"},t.length>0?[...t].filter((e=>m.includes(e))).map(((e,t)=>l().createElement("div",{key:e.value,className:`${p==t&&"bg-theme-tertiary"} py-2`},l().createElement("span",{className:"pl-2"},e.label)))):l().createElement("div",null))))}},"./src/hooks/useKeyPressed.js":(e,t,r)=>{r.r(t),r.d(t,{useKeyPressed:()=>l});var n=r("./node_modules/react/index.js");const l=e=>{const[t,r]=(0,n.useState)(!1),l=t=>{t.repeat||("ArrowUp"===t.key&&t.preventDefault(),t.key===e&&(t.preventDefault(),r(!0)))},s=t=>{t.preventDefault(),t.key===e&&r(!1)};return(0,n.useEffect)((()=>(window.addEventListener("keydown",l),window.addEventListener("keyup",s),()=>{window.removeEventListener("keydown",l),window.removeEventListener("keyup",s)}))),t}},"./src/routes/Inputs.jsx":(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});var n=r("./node_modules/react/index.js"),l=r.n(n),s=r("./src/components/common/Select.jsx");const a=[{label:"one",value:"1"},{label:"two",value:"2"},{label:"three",value:"3"},{label:"four",value:"4"},{label:"five",value:"5"}];function o(e){document.title="inputs";const[t,r]=(0,n.useState)({label:"",value:""});return l().createElement(l().Fragment,null,l().createElement("h1",null,"Title: ",e.title),l().createElement(s.default,{options:a,value:t,setSelectedValue:r,placeholder:""}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
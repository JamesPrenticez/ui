"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["routes-inputs"],{"./src/components/common/SearchSelect.jsx":(e,n,r)=>{r.r(n),r.d(n,{SearchSelect:()=>l});var t=r("./node_modules/react/index.js"),s=r.n(t),o=r("./src/components/common/select.module.css");function l(e){let{multiple:n,value:r,onChange:l,options:a}=e;const[i,u]=(0,t.useState)(!1),[c,d]=(0,t.useState)(0),m=(0,t.useRef)(null);function A(e){n?r.includes(e)?l(r.filter((n=>n!==e))):l([...r,e]):e!==r&&l(e)}function p(e){return n?r.includes(e):e===r}return(0,t.useEffect)((()=>{i&&d(0)}),[i]),(0,t.useEffect)((()=>{var e;const n=e=>{if(e.target==m.current)switch(e.code){case"Enter":case"Space":u((e=>!e)),i&&A(a[c]);break;case"ArrowUp":case"ArrowDown":{if(!i){u(!0);break}const n=c+("ArrowDown"===e.code?1:-1);n>=0&&n<a.length&&d(n);break}case"Escape":u(!1)}};return null===(e=m.current)||void 0===e||e.addEventListener("keydown",n),()=>{var e;null===(e=m.current)||void 0===e||e.removeEventListener("keydown",n)}}),[i,c,a]),s().createElement("div",{ref:m,onBlur:()=>u(!1),onClick:()=>u((e=>!e)),tabIndex:0,className:o.default.container},s().createElement("ul",{className:`${o.default.options} ${i?o.default.show:""}`},a.map(((e,n)=>s().createElement("li",{onClick:n=>{n.stopPropagation(),A(e),u(!1)},onMouseEnter:()=>d(n),key:e.value,className:`${o.default.option} ${p(e)?o.default.selected:""} ${n===c?o.default.highlighted:""}`},e.label)))))}},"./src/components/common/Select.jsx":(e,n,r)=>{r.r(n),r.d(n,{default:()=>l});var t=r("./node_modules/react/index.js"),s=r.n(t),o=r("./src/hooks/useKeyPressed.js");function l(e){const{options:n,selectedValue:r,setSelectedValue:l,placeholder:a,renderIcon:i}=e;let u=i();const c=(0,t.useRef)(null),d=(0,t.useRef)(null),m=(0,t.useRef)([]),[A,p]=(0,t.useState)(!1),[E,f]=(0,t.useState)(n),[b,g]=(0,t.useState)(0),[h,v]=(0,t.useState)("");let C=n.filter((e=>E.includes(e)));const B=(0,o.useKeyPressed)("ArrowDown"),w=(0,o.useKeyPressed)("Enter");(0,t.useEffect)((()=>{A||B&&!A&&(p(!0),d.current.focus())}),[B,w]);const y=e=>{switch(e){case"up":let e=0===b?E.length-1:-1;m.current[b+e].scrollIntoView({behavior:"auto",block:"nearest",inline:"nearest"});break;case"down":let n=b===E.length-1?-b:1;m.current[b+n].scrollIntoView({behavior:"auto",block:"end",inline:"nearest"})}},j=e=>{g(0),v(e.target.value),(e=>{let r=n.filter((n=>n.label.toLowerCase().includes(e.toLowerCase())));f(r.map((e=>e)))})(e.target.value)};return s().createElement(s().Fragment,null,s().createElement("div",{ref:c,className:`${A&&"ring-1 ring-theme-quaternary"} relative flex my-1 bg-theme-primary text-theme-secondary w-full py-2 ring-[0.05rem] cursor-pointer rounded-sm`,tabIndex:0,onFocus:()=>p(!0),onBlur:()=>p(!1)},s().createElement("div",{className:"w-[2rem] flex items-center justify-center pointer-events-none "},u),s().createElement("input",{ref:d,type:"text",onKeyDown:e=>(e=>{switch(e.key){case"ArrowUp":g(0===b?E.length-1:b-1),y("up");break;case"ArrowDown":g(b===E.length-1?0:b+1),y("down");break;case"Enter":l(E[b]),v(""),f(n),p(!1),d.current.blur();break;case"Escape":p(!1),v(""),f(n),d.current.blur()}})(e),value:h,className:"absolute flex items-center left-[2rem] right-[2rem] inset-y-0 outline-none z-50 bg-transparent placeholder:text-theme-secondary",onChange:e=>j(e),placeholder:h.length>0?"":r.label.length>0?r.label:a||"Select..."}),s().createElement("div",{className:"absolute w-[2rem] right-0 inset-y-0 flex items-center justify-center",onMouseDown:()=>{document.activeElement===c.current&&A?p(!1):p(!0)}},s().createElement("svg",{xmlns:"http://www.w3.org/2000/svg",className:(A?"-rotate-90":"rotate-0")+" 'transition transform ease-in-out duration-200",height:20,width:20,fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",strokeWidth:2},s().createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M15 19l-7-7 7-7"}))),n&&s().createElement("div",{className:(A?"block":"hidden")+" absolute top-10 right-0 left-0 bg-theme-primary text-theme-secondary cursor-pointer ring-1 ring-theme-quaternary rounded-sm max-h-[10rem] overflow-y-scroll"},C.length>0?C.map(((e,r)=>s().createElement("div",{key:e.value,ref:e=>m.current[r]=e,className:`${b==r&&"bg-red-700 text-white"} py-2`,onMouseMove:()=>g(r),onClick:()=>{l(E[b]),v(""),f(n),p(!1)}},s().createElement("span",{className:"pl-2"},e.label)))):s().createElement("div",{className:"py-2"},s().createElement("span",{className:"pl-2"},"There are no results for your search...")))))}},"./src/hooks/useKeyPressed.js":(e,n,r)=>{r.r(n),r.d(n,{useKeyPressed:()=>s});var t=r("./node_modules/react/index.js");const s=e=>{const[n,r]=(0,t.useState)(!1),s=n=>{n.repeat||("ArrowUp"===n.key&&n.preventDefault(),n.key===e&&(n.preventDefault(),r(!0)))},o=n=>{n.preventDefault(),n.key===e&&r(!1)};return(0,t.useEffect)((()=>(window.addEventListener("keydown",s),window.addEventListener("keyup",o),()=>{window.removeEventListener("keydown",s),window.removeEventListener("keyup",o)}))),n}},"./src/routes/Inputs.jsx":(e,n,r)=>{r.r(n),r.d(n,{default:()=>a});var t=r("./node_modules/react/index.js"),s=r.n(t),o=r("./src/components/common/Select.jsx");r("./src/components/common/SearchSelect.jsx");const l=[{label:"one",value:"1"},{label:"two",value:"2"},{label:"three",value:"3"},{label:"four",value:"4"},{label:"five",value:"5"},{label:"six",value:"6"},{label:"seven",value:"7"},{label:"eight",value:"8"},{label:"nine",value:"9"},{label:"ten",value:"10"}];function a(e){document.title="inputs";const[n,r]=(0,t.useState)({label:"",value:""});return s().createElement(s().Fragment,null,s().createElement("h1",null,"Title: ",e.title),s().createElement("div",{className:"flex"},s().createElement("div",{className:"flex w-1/2"},s().createElement(o.default,{options:l,selectedValue:n,setSelectedValue:r,placeholder:"",renderIcon:()=>s().createElement(i,{height:20,width:20})})),s().createElement("div",{className:"flex w-1/2"},s().createElement("select",{class:"form-control"},s().createElement("option",null,"1"),s().createElement("option",null,"2"),s().createElement("option",null,"3"),s().createElement("option",null,"4"),s().createElement("option",null,"5")))),s().createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed elit sem, commodo vitae placerat elementum, consequat a magna. Vivamus efficitur augue id neque pretium, sit amet maximus magna mollis. Nullam iaculis ex nunc, eu consequat est porttitor quis. Suspendisse potenti. Morbi quis imperdiet metus. Nulla tincidunt nulla aliquet nisi maximus pharetra. Duis aliquet dolor mauris, a fringilla est condimentum at. Nullam tristique ligula ut tellus volutpat aliquet. Pellentesque sodales quis sem in interdum. Fusce volutpat lacus eu mattis scelerisque. Suspendisse nec tempus urna, eget luctus quam. In elementum quis purus eu finibus. Aliquam purus dui, ullamcorper et vehicula vel, malesuada in dolor. Nunc dignissim molestie velit id tincidunt. Vestibulum sed turpis sit amet ligula ultrices commodo. Fusce bibendum accumsan viverra. Etiam sit amet purus sed neque sollicitudin rutrum a eu quam. Proin quis odio quis ex pharetra elementum sit amet id augue. Nunc ultrices tellus elit, ut dapibus magna dapibus vitae. Sed facilisis sed sem id egestas. Aenean egestas, mauris ut luctus feugiat, justo metus placerat justo, eu sodales elit erat nec lectus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla non pulvinar velit, et hendrerit nibh. Morbi et felis eros. Vivamus ornare lectus et malesuada imperdiet. Nulla facilisi. Vivamus in vestibulum lorem, sit amet pulvinar ligula. Integer tempor nisl et orci ultrices tincidunt. Nunc dictum elementum elit. Nullam vel nulla et enim consequat volutpat. Sed in vulputate nunc, vel fermentum turpis. Morbi et erat id risus dapibus convallis. Vestibulum sollicitudin orci eget libero suscipit, in dapibus tortor maximus. Etiam tristique, leo sed cursus pharetra, lectus lacus semper massa, quis laoreet tellus orci eu diam. Vivamus justo sem, efficitur ut aliquet a, placerat ut nisi. Praesent malesuada a augue eget aliquet. Sed finibus sem sed augue iaculis, ac imperdiet enim tincidunt. Nam dignissim a lectus eget ornare. Suspendisse eleifend sem eu venenatis finibus. Praesent blandit metus vel libero gravida tempor. Cras non vulputate mauris. Suspendisse volutpat ante mi, non ullamcorper eros consectetur ut. Suspendisse semper gravida libero, ac varius ligula. Aliquam erat volutpat. Pellentesque non posuere lacus. Sed ut eleifend mi. Proin at mauris a sem venenatis tempus. Aenean interdum iaculis neque, eu dictum risus tincidunt id. Duis semper, ante et laoreet laoreet, sem orci accumsan dolor, nec condimentum ante neque quis neque. Curabitur ac turpis vitae arcu semper commodo in sed risus. Quisque tincidunt dapibus luctus. Nullam orci neque, ultrices finibus metus nec, finibus cursus metus. Morbi ut ultrices sem. Donec consequat neque a purus mollis iaculis. Etiam sit amet semper risus, eget ultricies eros. Fusce blandit nisi nec velit sodales sagittis. Integer pharetra dolor vitae turpis congue, et facilisis tortor placerat."))}function i(e){let{height:n,width:r}=e;return s().createElement("svg",{height:n,width:r,xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",strokeWidth:2},s().createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"}))}},"./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/components/common/select.module.css":(e,n,r)=>{r.r(n),r.d(n,{default:()=>a});var t=r("./node_modules/css-loader/dist/runtime/sourceMaps.js"),s=r.n(t),o=r("./node_modules/css-loader/dist/runtime/api.js"),l=r.n(o)()(s());l.push([e.id,".R7c1D6bUaKXqatzfi3oz {\r\n  position: relative;\r\n  width: 20em;\r\n  min-height: 1.5em;\r\n  border: .05em solid #777;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: .5em;\r\n  padding: .5em;\r\n  border-radius: .25em;\r\n  outline: none;\r\n}\r\n\r\n.R7c1D6bUaKXqatzfi3oz:focus {\r\n  border-color: hsl(200, 100%, 50%);\r\n}\r\n\r\n.yWHkD_uO5qzUldmFnFoo {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  gap: .5em;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.uup4JCEONgMORRbq3is4 {\r\n  background: none;\r\n  color: #777;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  font-size: 1.25em;\r\n}\r\n\r\n.uup4JCEONgMORRbq3is4:focus,\r\n.uup4JCEONgMORRbq3is4:hover {\r\n  color: #333;\r\n}\r\n\r\n.vHqGXPdhdOdfpJIDjleN {\r\n  background-color: #777;\r\n  align-self: stretch;\r\n  width: .05em;\r\n}\r\n\r\n.nmBVupAZ1SIzhMq_fXBE {\r\n  translate: 0 25%;\r\n  border: .25em solid transparent;\r\n  border-top-color: #777;\r\n}\r\n\r\n.PbfU8CiGxXcIBIEpXLrT {\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  display: none;\r\n  max-height: 15em;\r\n  overflow-y: auto;\r\n  border: .05em solid #777;\r\n  border-radius: .25em;\r\n  width: 100%;\r\n  left: 0;\r\n  top: calc(100% + .25em);\r\n  background-color: white;\r\n  z-index: 100;\r\n}\r\n\r\n.PbfU8CiGxXcIBIEpXLrT.u3P1jJ12lnOYUIm0Wdr9 {\r\n  display: block;\r\n}\r\n\r\n.o0q3Q1eLw1SjQOCsJOzI {\r\n  padding: .25em .5em;\r\n  cursor: pointer;\r\n}\r\n\r\n.o0q3Q1eLw1SjQOCsJOzI.PdLDyeNro8PfNC2gpp_g {\r\n  background-color: hsl(200, 100%, 70%);\r\n}\r\n\r\n.o0q3Q1eLw1SjQOCsJOzI.yp0uMb_G6v74naBRrB5o {\r\n  background-color: hsl(200, 100%, 50%);\r\n  color: white\r\n}\r\n\r\n.YTUKfjgWiA6vbVJ86z07 {\r\n  display: flex;\r\n  align-items: center;\r\n  border: .05em solid #777;\r\n  border-radius: .25em;\r\n  padding: .15em .25em;\r\n  gap: .25em;\r\n  cursor: pointer;\r\n  background: none;\r\n  outline: none;\r\n}\r\n\r\n.YTUKfjgWiA6vbVJ86z07:hover,\r\n.YTUKfjgWiA6vbVJ86z07:focus {\r\n  background-color: hsl(0, 100%, 90%);\r\n  border-color: hsl(0, 100%, 50%);\r\n}\r\n\r\n.YTUKfjgWiA6vbVJ86z07:hover > .Jpmd5sFGwx_wAt3aZzyT,\r\n.YTUKfjgWiA6vbVJ86z07:focus > .Jpmd5sFGwx_wAt3aZzyT{\r\n  color: hsl(0, 100%, 50%);\r\n}\r\n\r\n.YTUKfjgWiA6vbVJ86z07 > .Jpmd5sFGwx_wAt3aZzyT {\r\n  font-size: 1.25em;\r\n  color: #777;\r\n}","",{version:3,sources:["webpack://./src/components/common/select.module.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,wBAAwB;EACxB,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,aAAa;EACb,oBAAoB;EACpB,aAAa;AACf;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,eAAe;EACf,UAAU;EACV,iBAAiB;AACnB;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,sBAAsB;EACtB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,+BAA+B;EAC/B,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,gBAAgB;EAChB,aAAa;EACb,gBAAgB;EAChB,gBAAgB;EAChB,wBAAwB;EACxB,oBAAoB;EACpB,WAAW;EACX,OAAO;EACP,uBAAuB;EACvB,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,qCAAqC;EACrC;AACF;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,wBAAwB;EACxB,oBAAoB;EACpB,oBAAoB;EACpB,UAAU;EACV,eAAe;EACf,gBAAgB;EAChB,aAAa;AACf;;AAEA;;EAEE,mCAAmC;EACnC,+BAA+B;AACjC;;AAEA;;EAEE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;EACjB,WAAW;AACb",sourcesContent:[".container {\r\n  position: relative;\r\n  width: 20em;\r\n  min-height: 1.5em;\r\n  border: .05em solid #777;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: .5em;\r\n  padding: .5em;\r\n  border-radius: .25em;\r\n  outline: none;\r\n}\r\n\r\n.container:focus {\r\n  border-color: hsl(200, 100%, 50%);\r\n}\r\n\r\n.value {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  gap: .5em;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.clear-btn {\r\n  background: none;\r\n  color: #777;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  font-size: 1.25em;\r\n}\r\n\r\n.clear-btn:focus,\r\n.clear-btn:hover {\r\n  color: #333;\r\n}\r\n\r\n.divider {\r\n  background-color: #777;\r\n  align-self: stretch;\r\n  width: .05em;\r\n}\r\n\r\n.caret {\r\n  translate: 0 25%;\r\n  border: .25em solid transparent;\r\n  border-top-color: #777;\r\n}\r\n\r\n.options {\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  display: none;\r\n  max-height: 15em;\r\n  overflow-y: auto;\r\n  border: .05em solid #777;\r\n  border-radius: .25em;\r\n  width: 100%;\r\n  left: 0;\r\n  top: calc(100% + .25em);\r\n  background-color: white;\r\n  z-index: 100;\r\n}\r\n\r\n.options.show {\r\n  display: block;\r\n}\r\n\r\n.option {\r\n  padding: .25em .5em;\r\n  cursor: pointer;\r\n}\r\n\r\n.option.selected {\r\n  background-color: hsl(200, 100%, 70%);\r\n}\r\n\r\n.option.highlighted {\r\n  background-color: hsl(200, 100%, 50%);\r\n  color: white\r\n}\r\n\r\n.option-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  border: .05em solid #777;\r\n  border-radius: .25em;\r\n  padding: .15em .25em;\r\n  gap: .25em;\r\n  cursor: pointer;\r\n  background: none;\r\n  outline: none;\r\n}\r\n\r\n.option-badge:hover,\r\n.option-badge:focus {\r\n  background-color: hsl(0, 100%, 90%);\r\n  border-color: hsl(0, 100%, 50%);\r\n}\r\n\r\n.option-badge:hover > .remove-btn,\r\n.option-badge:focus > .remove-btn{\r\n  color: hsl(0, 100%, 50%);\r\n}\r\n\r\n.option-badge > .remove-btn {\r\n  font-size: 1.25em;\r\n  color: #777;\r\n}"],sourceRoot:""}]),l.locals={container:"R7c1D6bUaKXqatzfi3oz",value:"yWHkD_uO5qzUldmFnFoo","clear-btn":"uup4JCEONgMORRbq3is4",divider:"vHqGXPdhdOdfpJIDjleN",caret:"nmBVupAZ1SIzhMq_fXBE",options:"PbfU8CiGxXcIBIEpXLrT",show:"u3P1jJ12lnOYUIm0Wdr9",option:"o0q3Q1eLw1SjQOCsJOzI",selected:"PdLDyeNro8PfNC2gpp_g",highlighted:"yp0uMb_G6v74naBRrB5o","option-badge":"YTUKfjgWiA6vbVJ86z07","remove-btn":"Jpmd5sFGwx_wAt3aZzyT"};const a=l},"./src/components/common/select.module.css":(e,n,r)=>{r.r(n),r.d(n,{default:()=>v});var t=r("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),s=r.n(t),o=r("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),l=r.n(o),a=r("./node_modules/style-loader/dist/runtime/insertBySelector.js"),i=r.n(a),u=r("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),c=r.n(u),d=r("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),m=r.n(d),A=r("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),p=r.n(A),E=r("./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/components/common/select.module.css"),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=l(),f.insertStyleElement=m();var b=s()(E.default,f);if(!E.default.locals||e.hot.invalidate){var g=!E.default.locals,h=g?E:E.default.locals;e.hot.accept("./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/components/common/select.module.css",(n=>{E=r("./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/components/common/select.module.css"),function(e,n,r){if(!e&&n||e&&!n)return!1;var t;for(t in e)if((!r||"default"!==t)&&e[t]!==n[t])return!1;for(t in n)if(!(r&&"default"===t||e[t]))return!1;return!0}(h,g?E:E.default.locals,g)?(h=g?E:E.default.locals,b(E.default)):e.hot.invalidate()}))}e.hot.dispose((function(){b()}));const v=E.default&&E.default.locals?E.default.locals:void 0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
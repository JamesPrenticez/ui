"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["routes-admin"],{"./client/components/common/Select.jsx":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("./node_modules/react/index.js"),l=n.n(r),s=n("./client/hooks/useKeyPressed.js");function a(e){let{options:t,value:n,setSelectedValue:a,placeholder:o}=e;const i=(0,r.useRef)(null),[u,c]=(0,r.useState)(!1),[d,m]=(0,r.useState)(t),[f,v]=(0,r.useState)(0),[p,h]=(0,r.useState)(""),y=(0,s.useKeyPressed)("ArrowDown"),b=(0,s.useKeyPressed)("Enter");(0,r.useEffect)((()=>{u||y&&!u&&(c(!0),i.current.focus())}),[y,b]);const w=e=>{v(0),h(e.target.value),(e=>{let n=t.filter((t=>t.label.toLowerCase().includes(e.toLowerCase())));m(n.map((e=>e)))})(e.target.value)};return l().createElement(l().Fragment,null,l().createElement("div",{className:"\r relative\r my-1\r bg-theme-primary\r text-theme-secondary\r w-full\r py-2\r px-[3rem]       \r ring-[0.05rem]\r ring-theme-tertiary\r focus:ring-theme-quaternary\r cursor-pointer\r rounded-sm\r ",onClick:()=>c(!0),onBlur:()=>c(!1)},console.log(f),l().createElement("div",{className:"h-[1rem] py-2"},l().createElement("input",{ref:i,type:"text",onKeyDown:e=>(e=>{switch(e.key){case"ArrowUp":v((e=>e>0?e-1:e));break;case"ArrowDown":v((e=>e<d.length-1?e+1:e));break;case"Enter":a(d[f]),h(""),c(!1),i.current.blur();break;case"Escape":c(!1),i.current.blur()}})(e),value:p,className:"bg-transparent py-2 absolute left-[3rem] right-[3rem] inset-y-0 outline-none z-50",onChange:e=>w(e)}),l().createElement("p",{className:"absolute flex items-center left-[3rem] right-[3rem] inset-y-0 pointer-events-none"},p.length>0?"":n.label.length>0?n.label:o||"Select..."))),u&&l().createElement("div",{className:"bg-theme-primary text-theme-secondary cursor-pointer border-[0.05rem] border-theme-quaternary rounded-sm"},[...t].filter((e=>d.includes(e))).map(((e,t)=>l().createElement("div",{key:e.value,className:`${f==t&&"bg-theme-tertiary"}`},l().createElement("span",{className:"pl-2"},e.label))))))}},"./client/components/routes/Inputs.jsx":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("./node_modules/react/index.js"),l=n.n(r),s=n("./client/components/common/Select.jsx");const a=[{label:"one",value:"1"},{label:"two",value:"2"},{label:"three",value:"3"},{label:"four",value:"4"},{label:"five",value:"5"}];function o(e){document.title="inputs";const[t,n]=(0,r.useState)({label:"",value:""});return l().createElement(l().Fragment,null,l().createElement("h1",null,"Title: ",e.title),l().createElement(s.default,{options:a,value:t,setSelectedValue:n,placeholder:""}))}},"./client/components/routes/Table.jsx":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("./node_modules/react/index.js"),l=n.n(r),s=n("./utilities/number2words.js");const a=[{id:1,title:"one"},{id:2,title:"two"},{id:3,title:"three"},{id:4,title:"four"},{id:5,title:"five"}];function o(e){(0,r.useEffect)((()=>{document.title=e.title||"UI"}),[e.title]);const[t,n]=(0,r.useState)(a),[o,i]=(0,r.useState)(null),[u,c]=(0,r.useState)(a.length);return l().createElement(l().Fragment,null,l().createElement("h1",null,"Title: ",e.title),t.map(((e,t)=>l().createElement("div",{key:t,className:`bg-red-500 hover:bg-blue-500 ${o==e.id&&"animate-flash1"}`},e.title))),l().createElement("button",{className:"p-2 bg-blue-500",onClick:()=>(()=>{let e=u+1;console.log("nextId",e);let t={id:e,title:(0,s.number2words)(e)};n((e=>[...e,t])),i(t.id),c(t.id)})()},"Add"))}},"./client/hooks/useKeyPressed.js":(e,t,n)=>{n.r(t),n.d(t,{useKeyPressed:()=>l});var r=n("./node_modules/react/index.js");const l=e=>{const[t,n]=(0,r.useState)(!1),l=t=>{t.repeat||t.key===e&&(t.preventDefault(),n(!0))},s=t=>{t.key===e&&n(!1)};return(0,r.useEffect)((()=>(window.addEventListener("keydown",l),window.addEventListener("keyup",s),()=>{window.removeEventListener("keydown",l),window.removeEventListener("keyup",s)}))),t}},"./utilities/number2words.js":(e,t,n)=>{n.r(t),n.d(t,{number2words:()=>s});var r="zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "),l="twenty thirty forty fifty sixty seventy eighty ninety".split(" ");function s(e){if(e<20)return r[e];var t=e%10;return e<100?l[~~(e/10)-2]+(t?"-"+r[t]:""):e<1e3?r[~~(e/100)]+" hundred"+(e%100==0?"":" and "+s(e%100)):s(~~(e/1e3))+" thousand"+(e%1e3!=0?" "+s(e%1e3):"")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,